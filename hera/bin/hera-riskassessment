#! /usr/bin/env python

import argparse
import logging
from hera.utils.logging import initialize_logging,with_logger
from hera.riskassessment import CLI

if __name__=="__main__":
    initialize_logging(
          with_logger("hera.bin", handlers=['console'], level='DEBUG', propagate=False),
          with_logger("hera.utils", handlers=['console'], level='DEBUG', propagate=False)
    #     with_logger("hera.simulations.hermesWorkflowToolkit", handlers=['console'], level='INFO', propagate=False),
    #     with_logger("hera.bin", handlers=['console'], level='DEBUG', propagate=False),
    )

    logger = logging.getLogger("hera.bin.hera_riskassessment")
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(help='sub-command help')

    # ------------------- Agents management
    parser_agents = subparsers.add_parser('agents', help='agents management')
    agents_subparsers = parser_agents.add_subparsers(help='agents management')

    # CreateRepository
    parser_create_rep = agents_subparsers.add_parser('createRepository', help='Create repository from json files in directory')
    parser_create_rep.add_argument('repository_name', type=str, default=None, help='Name of the repository.')
    parser_create_rep.add_argument('--path', type=str, default=None, help='Path to directory. If not provided will use the current directory.')
    parser_create_rep.set_defaults(func=CLI.createRepository)

    parsed = parser.parse_args()
    if 'func' not in parsed:
        parser.print_help()
    else:
        parsed.func(parsed)