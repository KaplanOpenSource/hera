#! /usr/bin/env python
import json
import argparse
from hera import toolkitHome
import os


#  Load the path to th experiment to hera

def addExperiment(projectName,experimentName, experimentPath):

    dataSourceDesc = dict()
    dataSourceDesc['handlerPath'] = os.path.abspath(experimentPath)

    dataSourceDesc['className'] = experimentName + 'Toolkit'

    toolkit = toolkitHome.getToolkit(toolkitName=toolkitHome.EXPERIMENT, projectName=projectName)

    datasource = toolkit.getDatasourceDocument(datasourceName=experimentName)

    if datasource is not None:
        toolkit.addDataSource(dataSourceName=experimentName,resource = "t", dataFormat = 'str',**dataSourceDesc)
        print(f"Added source {experimentName} to tool  in project {projectName}")
    else:
        toolkit.deleteDataSourceDocuments(datasourceName=experimentName)
        toolkit.addDataSource(dataSourceName=experimentName, resource = "t", dataFormat = 'str', **dataSourceDesc)
        print(f"Source {experimentName} already exists in {projectName}, delete current source")


if __name__ =="__main__":
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(help='Topic:')

    projectNameHelpDesc = 'The project name. [Optional]. If does not exist take from configuration.json in your directory'

    parser_prepare = parser.add_parser('list', help='Lists the experiments in your project')
    parser_prepare.add_argument('--projectName', type=str, default=None, help=projectNameHelpDesc)


    list_parser = subparsers.add_parser('list', help='Handles listing of the items')
    list_subparser = list_parser.add_subparsers(help='Handles simulation group')


    parser.add_argument('experimentName', type=str,help='The project to load the data')
    parser.add_argument('experimentPath', type=str, help='The experiment name')
    parser.add_argument('projectName', type=str, help='The path to the experiment files')
    args = parser.parse_args()
    addExperiment(args.projectName,args.experimentName, args.experimentPath)
