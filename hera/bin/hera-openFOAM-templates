#! /usr/bin/env python

import argparse
import json
import sys
import shutil
import os

if __name__=="__main__":

    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(help='sub-command help')

    parser_make  = subparsers.add_parser('make', help='Makes the relevant template')
    parser_prepare = subparsers.add_parser('prepare', help='Specialized the template according to specific configuration of the case')
    parser_build = subparsers.add_parser('executePipeline', help='executePipeline help')


    # Make - makes the case from requested template type.
    #        1. The template types should be datasource in the OF toolkit.
    #        2. Creates a default parameter file for the simulation runs.

    # Prepare - Specialized the workflow to the specific data of the run.
    #       1. Read the parameter file caseParameters.json and adjust the nodes of the template:
    #                - Geometry:
    #                       : Create (if necessary)
    #                       : Change the snappyHexMesh node : either add the parameters of the geometry
    #                         If geometry is empty, remove the node.
    #                - Other nodes:
    #                       : Write  the node in the appropriate .
    #       2.


    # Build - build all the cases from the parameter file and the template.
    #         Adds to the hera database if necessary.


