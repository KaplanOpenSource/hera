{
    "workflow": {
        "root": null,
        "solver": "homogenousWindLogProfile",
        "SolvedFields": "U",
        "AuxFields": "",
        "Templates": [],
        "nodeList": [
            "Parameters",
            "createEmptyCase",
            "blockMesh",
            "decomposePar",
            "controlDict",
            "g",
            "fvSolution",
            "fvSchemes",
            "homogenousWindLogProfileDict",
            "buildAllRun",
            "fileWriter"
        ],
        "nodes": {
            "Parameters": {
                "Execution": {
                    "input_parameters": {
                        "OFversion": "of10",
                        "targetDirectory": "{#moduleName}",
                        "Uh": 4,
                        "lambdaP": 0.25,
                        "lambdaF": 0.25,
                        "Hc": 10,
                        "decomposeProcessors": 16
                    }
                },
                "type": "general.Parameters"
            },
            "createEmptyCase": {
                "Execution": {
                    "input_parameters": {
                        "Method": "Command list",
                        "Command": "hera-openFoam {workflow.solver} case createEmpty {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}"
                    }
                },
                "type": "general.RunOsCommand"
            },
            "blockMesh": {
                "Execution": {
                    "input_parameters": {
                        "geometry": {},
                        "boundary": [
                            {
                                "name": "Walls",
                                "type": "wall",
                                "faces": [
                                    [
                                        0,
                                        1,
                                        2,
                                        3
                                    ]
                                ]
                            }
                        ],
                        "vertices": [
                            [
                                "$nlimsx",
                                "$nlimsy",
                                0
                            ],
                            [
                                "$limsx",
                                "$nlimsy",
                                0
                            ],
                            [
                                "$limsx",
                                "$limsy",
                                0
                            ],
                            [
                                "$nlimsx",
                                "$limsy",
                                0
                            ],
                            [
                                "$nlimsx",
                                "$nlimsy",
                                "$height"
                            ],
                            [
                                "$limsx",
                                "$nlimsy",
                                "$height"
                            ],
                            [
                                "$limsx",
                                "$limsy",
                                "$height"
                            ],
                            [
                                "$nlimsx",
                                "$limsy",
                                "$height"
                            ]
                        ],
                        "params": {
                            "height": "300",
                            "limsx": "1000",
                            "nlimsx": "-100",
                            "limsy": "300",
                            "nlimsy": "-300"
                        },
                        "defaultPatch": "patch",
                        "convertToMeters": "1",
                        "blocks": [
                            {
                                "hex": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7
                                ],
                                "cellCount": [
                                    100,
                                    100,
                                    50
                                ],
                                "grading": [
                                    1,
                                    1,
                                    10
                                ]
                            }
                        ]
                    }
                },
                "type": "openFOAM.mesh.BlockMesh"
            },
            "decomposePar": {
                "Execution": {
                    "input_parameters": {
                        "numberOfSubdomains": "{Parameters.output.decomposeProcessors}"
                    }
                },
                "type": "openFOAM.system.DecomposePar"
            },
            "g": {
                "Execution": {
                    "input_parameters": {
                        "x": 0,
                        "y": 0,
                        "z": -9.8
                    }
                },
                "type": "openFOAM.constant.g"
            },
            "fvSolution": {
                "Execution": {
                    "input_parameters": {
                        "fields": {
                            "p": {
                                "solver": "PCG",
                                "preconditioner": "DIC",
                                "tolerance": 1e-08,
                                "relTol": 0.0001,
                                "maxIter": 5000,
                                "final": {
                                    "solver": "PCG",
                                    "preconditioner": "DIC",
                                    "tolerance": 1e-08,
                                    "relTol": 0,
                                    "maxIter": 5000
                                }
                            },
                            "U": {
                                "solver": "PBiCG",
                                "preconditioner": "DILU",
                                "tolerance": 1e-08,
                                "relTol": 0.001,
                                "maxIter": 5000,
                                "final": {
                                    "solver": "PBiCG",
                                    "preconditioner": "DILU",
                                    "tolerance": 1e-08,
                                    "relTol": 0,
                                    "maxIter": 5000
                                }
                            }
                        },
                        "solverProperties": {
                            "algorithm": "SIMPLE",
                            "residualControl": {
                                "U": 0.0001
                            },
                            "solverFields": {
                                "nNonOrthogonalCorrectors": 2,
                                "pRefCell": 0,
                                "pRefValue": 0,
                                "momentumPredictor": "yes",
                                "nOuterCorrectors": 1,
                                "nCorrectors": 1,
                                "nonlinearSolver": "yes"
                            }
                        },
                        "relaxationFactors": {
                            "fields": {
                                "p": 0.15,
                                "U": 0.15
                            },
                            "equations": {
                                "p": {
                                    "factor": 0.4,
                                    "final": 0.4
                                },
                                "U": {
                                    "factor": 0.7,
                                    "final": 0.7
                                }
                            }
                        }
                    }
                },
                "type": "openFOAM.system.FvSolution"
            },
            "fvSchemes": {
                "Execution": {
                    "input_parameters": {
                        "default": {
                            "ddtScheme": "Euler",
                            "gradSchemes": {
                                "type": "Gauss",
                                "name": "linear"
                            },
                            "divSchemes": {
                                "type": "Gauss",
                                "name": "linear",
                                "parameters": ""
                            },
                            "interpolationSchemes": "linear",
                            "snGradSchemes": "uncorrected",
                            "wallDist": "meshWave",
                            "laplacianSchemes": {
                                "type": "Gauss",
                                "name": "linear",
                                "parameters": "uncorrected"
                            }
                        },
                        "fields": {}
                    }
                },
                "type": "openFOAM.system.FvSchemes"
            },
            "controlDict": {
                "Execution": {
                    "input_parameters": {
                        "values": {
                            "application": "{workflow.solver}",
                            "startFrom": "startTime",
                            "startTime": 0,
                            "stopAt": "endTime",
                            "endTime": 0.5,
                            "deltaT": 1,
                            "writeControl": "adjustableRunTime",
                            "writeInterval": 1,
                            "runTimeModifiable": true,
                            "interpolate": true,
                            "adjustTimeStep": true,
                            "purgeWrite": 0,
                            "writeFormat": "ascii",
                            "writePrecision": 7,
                            "writeCompression": false,
                            "timeFormat": "general",
                            "timePrecision": 6,
                            "maxCo": 0.5,
                            "functions": [],
                            "libs": []
                        }
                    }
                },
                "type": "openFOAM.system.ControlDict"
            },
            "homogenousWindLogProfileDict": {
                "Execution": {
                    "input_parameters": {
                        "Uh": "{Parameters.output.Uh}",
                        "lambdaP": "{Parameters.output.lambdaP}",
                        "lambdaF": "{Parameters.output.lambdaF}",
                        "Hc": "{Parameters.output.Hc}"
                    }
                },
                "type": "openFOAM.constant.homogenousWindLogProfileDict"
            },
            "buildAllRun": {
                "Execution": {
                    "input_parameters": {
                        "casePath": "{Parameters.output.targetDirectory}",
                        "caseExecution": {
                            "parallelCase": true,
                            "slurm": false,
                            "getNumberOfSubdomains": 10,
                            "runFile": []
                        },
                        "parallelCase": true,
                        "runFile": [
                            {
                                "name": "blockMesh",
                                "couldRunInParallel": false,
                                "parameters": null
                            },
                            {
                                "name": "decomposePar",
                                "parameters": "-force",
                                "couldRunInParallel": false
                            },
                            {
                                "name": "homogenousWindLogProfile",
                                "parameters": "",
                                "couldRunInParallel": true
                            }
                        ]
                    },
                    "requires": "createEmptyCase"
                },
                "type": "openFOAM.BuildAllrun"
            },
            "fileWriter": {
                "Execution": {
                    "input_parameters": {
                        "directoryPath": ".",
                        "Files": {
                            "blockMesh": {
                                "fileName": "system/blockMeshDict",
                                "fileContent": "{blockMesh.output.openFOAMfile}"
                            },
                            "decomposePar": {
                                "fileName": "system/decomposeParDict",
                                "fileContent": "{decomposePar.output.openFOAMfile}"
                            },
                            "homogenousWindLogProfileDict": {
                                "fileName": "constant/homogenousWindLogProfileDict",
                                "fileContent": "{homogenousWindLogProfileDict.output.openFOAMfile}"
                            },
                            "g": {
                                "fileName": "constant/g",
                                "fileContent": "{g.output.openFOAMfile}"
                            },
                            "fvSolution": {
                                "fileName": "system/fvSolution",
                                "fileContent": "{fvSolution.output.openFOAMfile}"
                            },
                            "fvSchemes": {
                                "fileName": "system/fvSchemes",
                                "fileContent": "{fvSchemes.output.openFOAMfile}"
                            },
                            "controlDict": {
                                "fileName": "system/controlDict",
                                "fileContent": "{controlDict.output.openFOAMfile}"
                            }
                        },
                        "casePath": "{Parameters.output.targetDirectory}"
                    },
                    "requires": "createEmptyCase"
                },
                "type": "general.FilesWriter"
            }
        }
    }
}