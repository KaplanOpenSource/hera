

import shutil
import os
import luigi
import json 
import sys

sys.path.insert(1, "")
from hermes.engines.luigi.taskUtils import utils as hermesutils

class Parameters_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","Parameters_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.general.Parameters.executer import Parameters  
        output = Parameters(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class CopyObjectToCase_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","CopyObjectToCase_0.json"))

    def requires(self):
        return dict(
                       Parameters=Parameters_0()
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.general.CopyFile.executer import CopyFile  
        output = CopyFile(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class fvSchemes_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","fvSchemes_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.system.FvSchemes.executer import FvSchemes  
        output = FvSchemes(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class momentumTransport_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","momentumTransport_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.constant.momentumTransport.executer import momentumTransport  
        output = momentumTransport(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class fvSolution_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","fvSolution_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.system.FvSolution.executer import FvSolution  
        output = FvSolution(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class blockMesh_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","blockMesh_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.mesh.BlockMesh.executer import BlockMesh  
        output = BlockMesh(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class snappyHexMesh_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","snappyHexMesh_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.mesh.SnappyHexMesh.executer import SnappyHexMesh  
        output = SnappyHexMesh(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class surfaceFeatures_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","surfaceFeatures_0.json"))

    def requires(self):
        return dict(
                       snappyHexMesh=snappyHexMesh_0(),
                       Parameters=Parameters_0()
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.system.SurfaceFeatures.executer import SurfaceFeatures  
        output = SurfaceFeatures(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class decomposePar_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","decomposePar_0.json"))

    def requires(self):
        return dict(
                       Parameters=Parameters_0()
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.system.DecomposePar.executer import DecomposePar  
        output = DecomposePar(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class g_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","g_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'x': 0, 'y': 0, 'z': -9.8}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.constant.g.executer import g  
        output = g(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class physicalProperties_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","physicalProperties_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.constant.physicalProperties.executer import physicalProperties  
        output = physicalProperties(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class defineNewBoundaryConditions_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","defineNewBoundaryConditions_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.system.ChangeDictionary.executer import ChangeDictionary  
        output = ChangeDictionary(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class controlDict_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","controlDict_0.json"))

    def requires(self):
        return dict(
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.system.ControlDict.executer import ControlDict  
        output = ControlDict(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class fileWriter_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","fileWriter_0.json"))

    def requires(self):
        return dict(
                       fvSchemes=fvSchemes_0(),
                       momentumTransport=momentumTransport_0(),
                       Parameters=Parameters_0(),
                       fvSolution=fvSolution_0(),
                       blockMesh=blockMesh_0(),
                       decomposePar=decomposePar_0(),
                       surfaceFeatures=surfaceFeatures_0(),
                       g=g_0(),
                       snappyHexMesh=snappyHexMesh_0(),
                       physicalProperties=physicalProperties_0(),
                       defineNewBoundaryConditions=defineNewBoundaryConditions_0(),
                       controlDict=controlDict_0()
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.general.FilesWriter.executer import FilesWriter  
        output = FilesWriter(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class CopyBuildingObject_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","CopyBuildingObject_0.json"))

    def requires(self):
        return dict(
                       Parameters=Parameters_0()
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.general.RunOsCommand.executer import RunOsCommand  
        output = RunOsCommand(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class createEmptyCase_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","createEmptyCase_0.json"))

    def requires(self):
        return dict(
                       Parameters=Parameters_0()
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.general.RunOsCommand.executer import RunOsCommand  
        output = RunOsCommand(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class buildAllRun_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","buildAllRun_0.json"))

    def requires(self):
        return dict(
                       Parameters=Parameters_0()
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.openFOAM.BuildAllrun.executer import BuildAllrun  
        output = BuildAllrun(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)

class finalnode_xx_0(luigi.Task,hermesutils):

    _taskJSON = None
    _workflowJSON = None 
    
    @property 
    def workflowJSON(self):
        return self._workflowJSON
        
    @property 
    def taskJSON(self):
        return self._taskJSON
    
    def __init__(self,*args,**kwargs): 
        super().__init__(*args,**kwargs)
        self._taskJSON ={}
        
        self._workflowJSON = {'workflow': {'root': None, 'solver': 'simpleFoam', 'SolvedFields': 'p p_rgh U k epsilon nut T Tbackground', 'AuxFields': '', 'Templates': [], 'nodeList': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter'], 'nodes': {'Parameters': {'Execution': {'input_parameters': {'OFversion': 'of10', 'targetDirectory': '{#moduleName}', 'objectFile': 'North.obj', 'decomposeProcessors': 16}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': {'formData': {}}}, 'type': 'general.Parameters'}, 'createEmptyCase': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'hera-openfoam {workflow.solver} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}'}}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'CopyObjectToCase': {'Execution': {'input_parameters': {'Source': '{Parameters.output.objectFile}', 'Target': '{Parameters.output.targetDirectory}/{Parameters.output.objectFile}'}, 'requires': 'createEmptyCase'}, 'GUI': {'Type': 'general.CopyFile.workbench.CopyFile', 'Properties': {'Source': {'prop': 'Source', 'init_val': '', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'The source file', 'current_val': ''}, 'Target': {'prop': 'Target', 'init_val': '', 'type': 'App::PropertyPath', 'Heading': 'Parameters', 'tooltip': 'The target directory', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.CopyFile'}, 'CopyBuildingObject': {'Execution': {'input_parameters': {'Method': 'Command list', 'Command': 'surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}'}, 'requires': 'CopyObjectToCase'}, 'GUI': {'Type': 'general.RunOsCommand.workbench.RunOsCommand', 'Properties': {'ChooseMethod': {'prop': 'ChooseMethod', 'init_val': ['Commands list', 'batchFile'], 'type': 'App::PropertyEnumeration', 'Heading': 'Parameters', 'tooltip': 'True-commands, False-file', 'current_val': 'Commands list'}, 'Commands': {'prop': 'Commands', 'init_val': [], 'type': 'App::PropertyStringList', 'Heading': 'Parameters', 'tooltip': 'The OS commands to execute', 'current_val': ["echo 'Here is an example of a shell script'", "echo '1a. File listing'", 'ls', "echo ''"]}, 'batchFile': {'prop': 'batchFile', 'init_val': 'Text', 'type': 'App::PropertyFile', 'Heading': 'Parameters', 'tooltip': 'File containing all the OS commands to execute', 'current_val': ''}}, 'WebGui': {}}, 'type': 'general.RunOsCommand'}, 'blockMesh': {'Execution': {'input_parameters': {'geometry': {}, 'boundary': [{'name': 'Walls', 'type': 'patch', 'faces': []}], 'vertices': [[-5, -35, 0], [160, -35, 0], [160, 40, 0], [-5, 40, 0], [-5, -35, 3], [160, -35, 3], [160, 40, 3], [-5, 40, 3]], 'defaultPatch': 'patch', 'convertToMeters': '1', 'blocks': [{'hex': [0, 1, 2, 3, 4, 5, 6, 7], 'cellCount': [330, 150, 6], 'grading': [1, 1, 1]}]}}, 'GUI': {'Type': 'openFOAM.mesh.BlockMesh.workbench.BlockMeshNode', 'Properties': 'Done', 'GeometryFaceTypes': {'TypeList': ['wall', 'symmetry', 'patch', 'cyclic'], 'TypeProperties': 'Done'}, 'boundary': [], 'vertices': []}, 'type': 'openFOAM.mesh.BlockMesh'}, 'snappyHexMesh': {'Execution': {'input_parameters': {'modules': {'castellatedMesh': True, 'snap': True, 'layers': True, 'mergeTolerance': 1e-06}, 'Geometry': {'objects': {}, 'refinementSurfaces': {}, 'regions': {}, 'layers': {'nSurfaceLayers': 10}}, 'castellatedMeshControls': {'maxLocalCells': 100000, 'maxGlobalCells': 100000000, 'minRefinementCells': 40, 'maxLoadUnbalance': 0.1, 'nCellsBetweenLevels': 8, 'resolveFeatureAngle': 30, 'allowFreeStandingZoneFaces': True, 'locationInMesh': [5.0, 0.5, 1]}, 'snapControls': {'nSmoothPatch': 5, 'tolerance': 6.0, 'nSolveIter': 200, 'nRelaxIter': 5, 'nFeatureSnapIter': 10, 'explicitFeatureSnap': False, 'multiRegionFeatureSnap': False, 'implicitFeatureSnap': True}, 'addLayersControls': {'relativeSizes': True, 'expansionRatio': 1.05, 'finalLayerThickness': 0.9, 'minThickness': 0.01, 'featureAngle': 100, 'slipFeatureAngle': 30, 'nLayerIter': 50, 'nRelaxedIter': 20, 'nRelaxIter': 5, 'nGrow': 0, 'nSmoothSurfaceNormals': 1, 'nSmoothNormals': 3, 'nSmoothThickness': 10, 'maxFaceThicknessRatio': 0.5, 'maxThicknessToMedialRatio': 0.3, 'minMedianAxisAngle': 90, 'nMedialAxisIter': 10, 'nBufferCellsNoExtrude': 0, 'additionalReporting': False}, 'meshQualityControls': {'maxNonOrtho': 65, 'maxBoundarySkewness': 20, 'maxInternalSkewness': 4, 'maxConcave': 80, 'minVol': 1e-13, 'minTetQuality': -1e+30, 'minArea': -1, 'minTwist': 0.02, 'minDeterminant': 0.001, 'minFaceWeight': 0.05, 'minVolRatio': 0.01, 'minTriangleTwist': -1, 'nSmoothScale': 4, 'errorReduction': 0.75, 'relaxed': {'maxNonOrtho': 75}}, 'geometry': {'objects': {'building': {'objectName': 'building', 'objectType': 'obj', 'levels': '1', 'refinementSurfaceLevels': [1, 2], 'patchType': 'wall', 'regions': {'inlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'outlet': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'TunnelWalls': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}, 'Tunnel3Block': {'type': 'wall', 'refinementSurfaceLevels': [1, 2]}}, 'layers': {'nSurfaceLayers': 10}}}, 'gemeotricalEntities': {}}}}, 'GUI': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMesh', 'Properties': {}, 'WebGui': 'Done', 'castellatedMeshControls': 'Done', 'snapControls': 'Done', 'addLayersControls': 'Done', 'meshQualityControls': 'Done', 'Geometry': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshGeometry', 'Properties': {}, 'WebGui': {}, 'Entities': {'TemplateEntity': 'Done', 'items': {}}}, 'Refinement': {'Type': 'openFOAM.mesh.SnappyHexMesh.workbench.SnappyHexMeshRefinement', 'Properties': {}, 'WebGui': {}}}, 'type': 'openFOAM.mesh.SnappyHexMesh'}, 'surfaceFeatures': {'Execution': {'input_parameters': {'OFversion': '{Parameters.output.OFversion}', 'geometryData': '{snappyHexMesh.input_parameters.geometry.objects}', 'includeAngle': 150, 'nonManifoldEdges': True, 'openEdges': True}, 'type': 'openFOAM.systemExecuters.surfaceFeaturesDict'}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.SurfaceFeatures'}, 'g': {'Execution': {'input_parameters': {'x': 0, 'y': 0, 'z': -9.8}}, 'type': 'openFOAM.constant.g'}, 'decomposePar': {'Execution': {'input_parameters': {'numberOfSubdomains': '{Parameters.output.decomposeProcessors}'}}, 'GUI': {'Properties': {}}, 'type': 'openFOAM.system.DecomposePar'}, 'controlDict': {'Execution': {'input_parameters': {'values': {'application': '{workflow.solver}', 'startFrom': 'startTime', 'startTime': 0, 'stopAt': 'endTime', 'endTime': 600, 'deltaT': 0.01, 'writeControl': 'adjustableRunTime', 'writeInterval': 1, 'runTimeModifiable': True, 'interpolate': True, 'adjustTimeStep': True, 'purgeWrite': 0, 'writeFormat': 'ascii', 'writePrecision': 7, 'writeCompression': False, 'timeFormat': 'general', 'timePrecision': 6, 'maxCo': 0.5, 'functions': [], 'libs': []}}}, 'GUI': {'Type': 'openFOAM.system.ControlDict.workbench.ControlDict', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ControlDict'}, 'fvSchemes': {'Execution': {'input_parameters': {'default': {'ddtScheme': 'Euler', 'gradSchemes': {'type': 'Gauss', 'name': 'linear'}, 'divSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': ''}, 'interpolationSchemes': 'linear', 'snGradSchemes': 'uncorrected', 'wallDist': 'meshWave', 'laplacianSchemes': {'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}}, 'fields': {'p': {'fluxRequired ': True, 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': '(1|A(U))', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}]}, 'U': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMISTV', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'nuEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}, {'noOfOperators': 2, 'coefficient': 'AnisotropicDiffusion', 'type': 'Gauss', 'name': 'linear', 'parameters': 'uncorrected'}], 'fluxRequired': False}, 'k': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DkEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'epsilon': {'fluxRequired ': False, 'divSchemes': [{'noOfOperators': 2, 'phi': 'phi', 'type': 'Gauss', 'name': 'UMIST', 'parameters': ''}], 'laplacianSchemes': [{'noOfOperators': 2, 'coefficient': 'DepsilonEff', 'type': 'Gauss', 'name': 'linear', 'parameters': 'corrected'}]}, 'p_rgh': {'fluxRequired': True}, 'div((nuEff*dev2(T(grad(U)))))': {'divSchemes': [{'noOfOperators': 1, 'type': 'Gauss', 'name': 'linear', 'parameters': ''}]}}}}, 'GUI': {'Type': 'openFOAM.system.FvSchemes.workbench.FvSchemes', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSchemes'}, 'fvSolution': {'Execution': {'input_parameters': {'fields': {'p': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'preconditioner': 'DIC', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000, 'smoother': 'DICGaussSeidel'}, 'smoother': 'GaussSeidel'}, 'U': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 1e-05, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-10, 'relTol': 0, 'maxIter': 5000}}, 'epsilon': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'k': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'p_rgh': {'solver': 'GAMG', 'tolerance': 0, 'relTol': 0.1, 'maxIter': 5000, 'final': {'solver': 'GAMG', 'smoother': 'DICGaussSeidel', 'tolerance': 1e-06, 'relTol': 0, 'maxIter': 5000}, 'smoother': 'GaussSeidel'}, 'T': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}, 'Tbackground': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0.001, 'maxIter': 5000, 'final': {'solver': 'PBiCG', 'preconditioner': 'DILU', 'tolerance': 1e-08, 'relTol': 0, 'maxIter': 5000}}}, 'solverProperties': {'algorithm': 'PIMPLE', 'residualControl': {'p': 0.0001, 'U': 0.0001, 'k': 0.0001, 'epsilon': 0.0001}, 'solverFields': {'nNonOrthogonalCorrectors': 2, 'pRefCell': 0, 'pRefValue': 0, 'momentumPredictor': 'yes', 'nOuterCorrectors': 1, 'nCorrectors': 1, 'nonlinearSolver': 'yes'}, 'relaxationFactors': {}}, 'relaxationFactors': {'fields': {'p': 0.15, 'U': 0.15, 'k': 0.15, 'epsilon': 0.15}, 'equations': {'p': {'factor': 0.4, 'final': 0.4}, 'U': {'factor': 0.7, 'final': 0.7}, 'k': {'factor': 0.7, 'final': 0.7}, 'epsilon': {'factor': 0.7, 'final': 0.7}}}}}, 'GUI': {'Type': 'openFOAM.system.FvSolution.workbench.FvSolution', 'Properties': {}, 'WebGui': 'Done', 'fields': {'template_webGui': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'items': {}}}, 'type': 'openFOAM.system.FvSolution'}, 'physicalProperties': {'Execution': {'input_parameters': {'transportModel': 'Newtonian', 'nu': 1e-05, 'parameters': {'nu': {'dimensions': '[0 2 -1 0 0 0 0]', 'value': 1e-05}, 'beta': {'dimensions': '[0 0 0 -1 0 0 0]', 'value': 0.0033333333333333335, 'printName': True}, 'Tref': {'dimensions': '[0 0 0 1 0 0 0]', 'value': 300, 'printName': True}, 'Pr': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 0.7, 'printName': True}, 'Prt': {'dimensions': '[0 0 0 0 0 0 0]', 'value': 1, 'printName': True}}}}, 'GUI': {'Type': 'openFOAM.constant.TransportProperties.workbench.TransportProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.physicalProperties'}, 'momentumTransport': {'Execution': {'input_parameters': {'simulationType': 'RAS', 'Model': 'LienLeschziner', 'turbulence': True}}, 'GUI': {'Type': 'openFOAM.constant.TurbulenceProperties.workbench.TurbulenceProperties', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.constant.momentumTransport'}, 'defineNewBoundaryConditions': {'Execution': {'input_parameters': {'fields': {'U': {'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform (0.4 0 0)'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'noSlip'}, 'Tunnel3Block': {'type': 'noSlip'}}}, 'T': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'Tbackground': {'internalField': 'uniform 293', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  293'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  293'}, 'TunnelWalls': {'type': 'fixedValue', 'value': 'uniform  293'}, 'Tunnel3Block': {'type': 'fixedValue', 'value': 'uniform  293'}}}, 'epsilon': {'internalField': 'uniform 6.4e-6', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6.3e-5'}, 'outlet': {'type': 'zeroGradient'}, 'TunnelWalls': {'type': 'zeroGradient'}, 'Tunnel3Block': {'type': 'epsilonWallFunction', 'refValue': 'uniform 1', 'value': 'uniform  1'}}}, 'k': {'internalField': 'uniform 6e-4', 'boundaryField': {'inlet': {'type': 'fixedValue', 'value': 'uniform  6e-4'}, 'outlet': {'type': 'zeroGradient', 'value': 'uniform  6e-4'}, 'TunnelWalls': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}, 'Tunnel3Block': {'type': 'kLowReWallFunction', 'refValue': 'uniform  6e-4', 'value': 'uniform  6e-4'}}}, 'nut': {'internalField': 'uniform 1e-3', 'boundaryField': {'inlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'outlet': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'TunnelWalls': {'type': 'nutLowReWallFunction', 'refValue': 'uniform  0', 'value': 'uniform  0'}, 'Tunnel3Block': {'type': 'zeroGradient'}}}, 'p': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}, 'p_rgh': {'internalField': 'uniform 0', 'boundaryField': {'inlet': {'type': 'zeroGradient'}, 'outlet': {'type': 'fixedValue', 'value': 'uniform 0'}, 'TunnelWalls': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}, 'Tunnel3Block': {'type': 'fixedFluxPressure', 'rho': 'rhok', 'value': 'uniform 0'}}}}}}, 'GUI': {'Type': 'HermesNode.WebGuiNode', 'Properties': {}, 'WebGui': 'Done'}, 'type': 'openFOAM.system.ChangeDictionary'}, 'buildAllRun': {'Execution': {'input_parameters': {'casePath': '{Parameters.output.targetDirectory}', 'caseExecution': {'parallelCase': True, 'slurm': False, 'getNumberOfSubdomains': 10, 'runFile': []}, 'parallelCase': True, 'runFile': [{'name': 'blockMesh', 'couldRunInParallel': False, 'parameters': None}, {'name': 'surfaceFeatures', 'parameters': '-dict system/building', 'couldRunInParallel': False}, {'name': 'decomposePar', 'parameters': '-force', 'couldRunInParallel': False}, {'name': 'snappyHexMesh', 'parameters': '-overwrite', 'couldRunInParallel': True}, {'name': 'ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1', 'parameters': None, 'couldRunInParallel': False, 'foamJob': False}, {'name': 'changeDictionary', 'parameters': None, 'couldRunInParallel': True}]}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'openFOAM.BuildAllrun'}, 'fileWriter': {'Execution': {'input_parameters': {'directoryPath': '.', 'Files': {'blockMesh': {'fileName': 'system/blockMeshDict', 'fileContent': '{blockMesh.output.openFOAMfile}'}, 'decomposePar': {'fileName': 'system/decomposeParDict', 'fileContent': '{decomposePar.output.openFOAMfile}'}, 'snappyHexMeshDict': {'fileName': 'system/snappyHexMeshDict', 'fileContent': '{snappyHexMesh.output.openFOAMfile}'}, 'g': {'fileName': 'constant/g', 'fileContent': '{g.output.openFOAMfile}'}, 'controlDict': {'fileName': 'system/controlDict', 'fileContent': '{controlDict.output.openFOAMfile}'}, 'fvSchemes': {'fileName': 'system/fvSchemes', 'fileContent': '{fvSchemes.output.openFOAMfile}'}, 'fvSolution': {'fileName': 'system/fvSolution', 'fileContent': '{fvSolution.output.openFOAMfile}'}, 'physicalProperties': {'fileName': 'constant/physicalProperties', 'fileContent': '{physicalProperties.output.openFOAMfile}'}, 'momentumTransport': {'fileName': 'constant/momentumTransport', 'fileContent': '{momentumTransport.output.openFOAMfile}'}, 'changeDictionary': {'fileName': 'system/changeDictionaryDict', 'fileContent': '{defineNewBoundaryConditions.output.openFOAMfile}'}, 'surfaceFeatures': {'fileName': 'system', 'fileContent': '{surfaceFeatures.output.openFOAMfile}'}}, 'casePath': '{Parameters.output.targetDirectory}'}, 'requires': 'createEmptyCase'}, 'GUI': {}, 'type': 'general.FilesWriter'}, 'finalnode_xx': {'name': 'finalnode_xx', 'type': 'general.Parameters', 'Execution': {'input_parameters': {}}, 'GUI': {'TypeFC': {}, 'Properties': {}, 'WebGui': {}}, 'requires': ['Parameters', 'createEmptyCase', 'CopyObjectToCase', 'CopyBuildingObject', 'blockMesh', 'snappyHexMesh', 'surfaceFeatures', 'g', 'decomposePar', 'controlDict', 'fvSchemes', 'fvSolution', 'physicalProperties', 'momentumTransport', 'defineNewBoundaryConditions', 'buildAllRun', 'fileWriter']}}}}['workflow']

    def output(self):
        targetBaseFile = os.path.abspath(__file__).split(".")[0]
        return luigi.LocalTarget(os.path.join(f"{targetBaseFile}_targetFiles","finalnode_xx_0.json"))

    def requires(self):
        return dict(
                       CopyObjectToCase=CopyObjectToCase_0(),
                       Parameters=Parameters_0(),
                       fvSchemes=fvSchemes_0(),
                       momentumTransport=momentumTransport_0(),
                       fvSolution=fvSolution_0(),
                       blockMesh=blockMesh_0(),
                       surfaceFeatures=surfaceFeatures_0(),
                       decomposePar=decomposePar_0(),
                       fileWriter=fileWriter_0(),
                       g=g_0(),
                       CopyBuildingObject=CopyBuildingObject_0(),
                       createEmptyCase=createEmptyCase_0(),
                       snappyHexMesh=snappyHexMesh_0(),
                       physicalProperties=physicalProperties_0(),
                       defineNewBoundaryConditions=defineNewBoundaryConditions_0(),
                       controlDict=controlDict_0(),
                       buildAllRun=buildAllRun_0()
                   )

    def run(self):
        target = self.output()
        target.makedirs()
        
        task_executer_mapping = {}
        
        parameters_from_required = self.get_all_required_outputs()        
        params = dict(parameters_from_required)
        
        # We seperated the GUI from the execution. 
        # params['formData']   = {}
        # params['files']      = {}
        # params['Schema']     = {}
        # params['uiSchema']   = {}
        # params['Properties'] = 
        # params['WebGui']     = 
        
       
        executer_parameters = self.build_executer_parameters(task_executer_mapping, params)
        executer_parameters['WD_path']='/ibdata/yehudaa/Projects/2024/EWTIndoor'
                    
        from hermes.Resources.general.Parameters.executer import Parameters  
        output = Parameters(self._taskJSON).run(**executer_parameters)
        
        params['input_parameters'] = executer_parameters 
        params['output'] = output        
        
        out_params = params
        with open(self.output().fn, "w") as outfile:
            json.dump(out_params, outfile,indent=4)
